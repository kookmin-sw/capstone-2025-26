name: Deploy Django Application

on:
  push:
    branches:
      - develop
    paths:
      - 'journey/**'  # journey 폴더 내 변경사항만 감지

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'  # 사용하는 Python 버전에 맞게 조정
          
          
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd serv/capstone-2025-26 # Adjust if your project root on the server is different
            git pull fetch --all
            git reset --hard origin/develop
            git pull # Ensure we are on the latest develop commit
            # Navigate to the directory with docker-compose.yml, assuming it's in the root or journey
            # If docker-compose.yml is in the 'journey' directory, uncomment the next line
            cd journey 
            
            # Build and restart containers using Docker Compose
            docker-compose down # Stop existing containers (optional, but often safer)
            docker-compose pull # Pull latest images if specified in compose file
            docker-compose build # Build images if using Dockerfiles
            docker-compose up -d --remove-orphans # Start services in detached mode and remove old containers
            
            # Optional: Run migrations if not handled within container startup
            # docker-compose exec <your_django_service_name> python manage.py migrate

            # Remove unused docker images and volumes (optional cleanup)
            # docker image prune -af
            # docker volume prune -f

